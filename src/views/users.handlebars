
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Users List</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .users-container {
            margin-top: 50px;
        }

        .user-card {
            margin-bottom: 20px;
        }

        .cleanup-button-container {
            text-align: center;
            margin-bottom: 20px;
        }

        .card {
            display: flex;
            flex-direction: column;
            height: 100%;
        }

        .card-body {
            flex: 1;
        }
    </style>
</head>

<body>
    <div class="container users-container">
        <h1 class="text-center">Users:</h1>

        <div class="row">
            {{#each plainUsers}}
            <div class="col-md-4 user-card">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">{{this.first_name}} {{this.last_name}}</h5>
                        <p class="card-text">Email: {{this.email}}</p>
                        <p class="card-text">Role: {{this.role}}</p>
                        <button class="btn btn-danger delete-button" data-id="{{this._id}}">Delete</button>
                        <button class="btn btn-secondary role-button" data-id="{{this._id}}">Change Role</button>
                    </div>
                </div>
            </div>
            {{/each}}
            <div class="cleanup-button-container">
                <button style="margin-top: 100px;" id="cleanup-button" class="btn btn-danger">Clean Up Inactive Users</button>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('cleanup-button').addEventListener('click', async () => {
            try {
                const response = await fetch('/api/users/cleanup-inactive', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('jwtToken')}`
                    }
                });

                if (response.ok) {
                    alert('Inactive users have been cleaned up.');
                    location.reload();
                } else {
                    const errorText = await response.text();
                    alert(`Failed to clean up inactive users: ${errorText}`);
                }
            } catch (error) {
                console.error('Error cleaning up inactive users:', error);
                alert('An error occurred while cleaning up inactive users.');
            }
        });

        document.querySelectorAll('.delete-button').forEach(button => {
            button.addEventListener('click', async (event) => {
                const userId = event.target.getAttribute('data-id');
                try {
                    const response = await fetch(`/api/users/${userId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${localStorage.getItem('jwtToken')}`
                        }
                    });

                    if (response.ok) {
                        alert('User has been deleted.');
                        location.reload();
                    } else {
                        const errorText = await response.text();
                        alert(`Failed to delete user: ${errorText}`);
                    }
                } catch (error) {
                    console.error('Error deleting user:', error);
                    alert('An error occurred while deleting the user.');
                }
            });
        });

    document.querySelectorAll('.role-button').forEach(button => {
        button.addEventListener('click', async (event) => {
            const userId = event.target.getAttribute('data-id');
            try {
                const newRole = prompt('Enter new role (user, admin, premium):');
                if (newRole) {
                    const response = await fetch(`/api/users/changerole`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${localStorage.getItem('jwtToken')}`
                        },
                        body: JSON.stringify({ uid: userId, role: newRole })
                    });

                    if (response.ok) {
                        alert('User role has been updated.');
                        location.reload();
                    } else {
                        const errorText = await response.text();
                        alert(`Failed to update user role: ${errorText}`);
                    }
                }
            } catch (error) {
                console.error('Error updating user role:', error);
                alert('An error occurred while updating the user role.');
            }
        });
        });
    </script>
</body>

</html>
